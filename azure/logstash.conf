# Logstash configuration for Azure Container Instances
input {
  # Beats input for log collection
  beats {
    port => 5044
  }
  
  # HTTP input for direct log ingestion
  http {
    port => 8080
    codec => json
  }
  
  # TCP input for application logs
  tcp {
    port => 5000
    codec => json_lines
  }
}

filter {
  # Parse timestamp
  if [timestamp] {
    date {
      match => [ "timestamp", "ISO8601" ]
    }
  }
  
  # Add environment information
  mutate {
    add_field => { "environment" => "azure-aci" }
    add_field => { "deployment" => "ai-study-circle" }
  }
  
  # Parse application logs
  if [service] == "backend" {
    # Parse Express.js logs
    if [message] =~ /^(GET|POST|PUT|DELETE|PATCH)/ {
      grok {
        match => { "message" => "%{WORD:http_method} %{URIPATH:url} %{NUMBER:status_code:int} - %{NUMBER:response_time:float}ms" }
      }
    }
    
    # Parse authentication logs
    if [message] =~ /Authentication/ {
      mutate {
        add_tag => ["auth"]
      }
    }
    
    # Parse database logs
    if [message] =~ /(MongoDB|Redis)/ {
      mutate {
        add_tag => ["database"]
      }
    }
  }
  
  if [service] == "frontend" {
    # Parse Next.js logs
    if [message] =~ /\[(info|warn|error)\]/ {
      grok {
        match => { "message" => "\[%{WORD:log_level}\] %{GREEDYDATA:log_message}" }
      }
    }
  }
  
  # Parse error logs
  if [level] == "error" or [level] == "ERROR" {
    mutate {
      add_tag => ["error"]
    }
  }
  
  # Performance monitoring
  if [response_time] {
    if [response_time] > 1000 {
      mutate {
        add_tag => ["slow_request"]
      }
    }
  }
  
  # Security monitoring
  if [status_code] == 401 or [status_code] == 403 {
    mutate {
      add_tag => ["security", "unauthorized"]
    }
  }
  
  if [status_code] >= 500 {
    mutate {
      add_tag => ["error", "server_error"]
    }
  }
}

output {
  # Output to Elasticsearch
  elasticsearch {
    hosts => ["elasticsearch:9200"]
    index => "ai-study-circle-logs-%{+YYYY.MM.dd}"
    template_name => "ai-study-circle"
    template_pattern => "ai-study-circle-logs-*"
    template => {
      "index_patterns" => ["ai-study-circle-logs-*"]
      "settings" => {
        "number_of_shards" => 1
        "number_of_replicas" => 0
        "index.refresh_interval" => "5s"
      }
      "mappings" => {
        "properties" => {
          "@timestamp" => {
            "type" => "date"
          }
          "level" => {
            "type" => "keyword"
          }
          "service" => {
            "type" => "keyword"
          }
          "message" => {
            "type" => "text"
          }
          "status_code" => {
            "type" => "integer"
          }
          "response_time" => {
            "type" => "float"
          }
          "url" => {
            "type" => "keyword"
          }
          "http_method" => {
            "type" => "keyword"
          }
          "environment" => {
            "type" => "keyword"
          }
        }
      }
    }
  }
  
  # Debug output (remove in production)
  # stdout { codec => rubydebug }
}